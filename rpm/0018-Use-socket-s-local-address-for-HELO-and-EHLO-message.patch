From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Raine Makelainen <raine.makelainen@jolla.com>
Date: Tue, 23 Jul 2019 11:44:27 +0300
Subject: [PATCH] Use socket's local address for HELO and EHLO messages

Prefer first local domain name if we have one. After that
if we have host address that is valid for any interface, then use it.

Change-Id: I91acc9329b68f2146a7158eedc49d7a506b48376
---
 src/plugins/messageservices/smtp/smtpclient.cpp | 15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

diff --git a/src/plugins/messageservices/smtp/smtpclient.cpp b/src/plugins/messageservices/smtp/smtpclient.cpp
index 19f69880..a9432ab9 100644
--- a/src/plugins/messageservices/smtp/smtpclient.cpp
+++ b/src/plugins/messageservices/smtp/smtpclient.cpp
@@ -81,11 +81,16 @@ static QByteArray messageId(const QByteArray& domainName, quint32 addressCompone
             '>').toLatin1();
 }
 
-static QByteArray localName()
+static QByteArray localName(const QHostAddress &hostAddress)
 {
+
     QByteArray result(QHostInfo::localDomainName().toLatin1());
     if (!result.isEmpty())
         return result;
+    if (hostAddress.protocol() == QAbstractSocket::IPv6Protocol)
+        return "[IPv6:" + hostAddress.toString().toLatin1() + "]";
+    else if (!hostAddress.isNull())
+        return "[" + hostAddress.toString().toLatin1() + "]";
     QList<QHostAddress> addresses(QNetworkInterface::allAddresses());
     if (addresses.isEmpty())
         return "localhost.localdomain";
@@ -317,7 +322,7 @@ void SmtpClient::connected(QMailTransport::EncryptType encryptType)
 #ifndef QT_NO_SSL
     if ((smtpCfg.smtpEncryption() == QMailTransport::Encrypt_TLS) && (status == TLS)) {
         // We have entered TLS mode - restart the SMTP dialog
-        QByteArray ehlo("EHLO " + localName());
+        QByteArray ehlo("EHLO " + localName(transport->socket().localAddress()));
         sendCommand(ehlo);
         status = Helo;
     }
@@ -460,7 +465,7 @@ void SmtpClient::nextAction(const QString &response)
             capabilities.clear();
 
             // We need to know if extensions are supported
-            QByteArray ehlo("EHLO " + localName());
+            QByteArray ehlo("EHLO " + localName(transport->socket().localAddress()));
             sendCommand(ehlo);
             status = Helo;
         } else {
@@ -472,7 +477,7 @@ void SmtpClient::nextAction(const QString &response)
     {
         if (responseCode == 500) {
             // EHLO is not implemented by this server - fallback to HELO
-            QByteArray ehlo("HELO " + localName());
+            QByteArray ehlo("HELO " + localName(transport->socket().localAddress()));
             sendCommand(ehlo);
         } else if (responseCode == 250) {
             if (domainName.isEmpty()) {
@@ -703,7 +708,7 @@ void SmtpClient::nextAction(const QString &response)
                     operationFailed(QMailServiceAction::Status::ErrConfiguration, response);
                 }
                 // Restart the authentication process
-                QByteArray ehlo("EHLO " + localName());
+                QByteArray ehlo("EHLO " + localName(transport->socket().localAddress()));
                 sendCommand(ehlo);
                 status = Helo;
             } else {
-- 
2.29.2

